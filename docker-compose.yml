version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - timely_class_network

  # pgAdmin 4
  pgadmin:
    image: dpage/pgadmin4:8
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: itzmesojib@gmail.com
      PGADMIN_DEFAULT_PASSWORD: Sojib@123
    ports:
      - "5050:80"
      - "5051:443"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - timely_class_network

  # Redis Cache
  redis:
    image: redis:latest
    container_name: redis_cache
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - timely_class_network

  # Users Microservice
  users-service:
    image: sajadurrahman/timelyclass-users-service:latest
    container_name: users_service
    restart: always
    env_file:
      - ./services/User/.env
    ports:
      - "5001:5001"
    depends_on:
      - postgres
      - redis
    networks:
      - timely_class_network

  # Schedule Microservice
  schedule-service:
    image: sajadurrahman/timelyclass-schedule-service:latest
    container_name: schedule_service
    restart: always
    env_file:
      - ./services/Schedule/.env
    ports:
      - "5002:5002"
    depends_on:
      - postgres
      - redis
      - users-service
    networks:
      - timely_class_network

  # Kong Database
  kong-database:
    image: postgres:14
    container_name: kong_db
    restart: always
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
      POSTGRES_DB: kong
    ports:
      - "5433:5432"
    volumes:
      - kong_data:/var/lib/postgresql/data
    networks:
      - timely_class_network

  # Kong Migrations
  kong-migrations:
    image: kong:3.3
    command: kong migrations bootstrap
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    depends_on:
      - kong-database
    networks:
      - timely_class_network

  # Kong Gateway
  kong:
    image: kong:3.3
    container_name: kong
    restart: always
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    depends_on:
      - kong-migrations
    networks:
      - timely_class_network

  # Database Backup Service
  db-backup:
    build:
      context: ./backup-scripts
    container_name: db_backup_service
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST: postgres_db
    volumes:
      - db_backups:/backups
      - ./rclone:/root/.config/rclone   # map host rclone.conf
    depends_on:
      - postgres
    networks:
      - timely_class_network

# Persistent Volumes
volumes:
  postgres_data:
  redis_data:
  pgadmin_data:
  kong_data:
  db_backups:

# Docker Network
networks:
  timely_class_network:
    driver: bridge
